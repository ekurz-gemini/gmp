/*!
\page comm_records GMP Commands Records

This bundle provides provides CAD, CAR and APPLY EPICS records using the \ref cas.

\section comm_records_provides_sec Provided Services
This bundle provides Java implementations of the Gemini APPLY, CAD and CAR records. It instantiates one "master"
apply record, one CAD record per GPI command, and one CAR record per each of these records. The general CAR record
provides a summary of all the specific CARs. For specifications about the behavior of these records in Gemini in
general, please refer to
Gemini ICDs 1a and 1b, or to the documentation at \ref gemrec, particularly \ref gemapply, \ref gemcad and \ref gemcar.
For the details of the specific implementation provided here, please refer to \ref comm_records_notes_sec.

\section comm_records_requires_sec Required Services
This bundle requires the \ref edu.gemini.cas.ChannelAccessServer "ChannelAccessServer" OSGI service, provided by
\ref cas bundle, and the \ref edu.gemini.aspen.giapi.commands.CommandSender "CommandServer" OSGI service, provided by
the gmp-commands bundle.

\section comm_records_configuration_sec Configuration
This module doesn't have any configuration files.

\section comm_records_notes_sec Notes
\subsection apply_sec GIAPI APPLY Record
The APPLY record described in \ref gemapply has been simplified to the minimum required by the Gemini OCS from a
functional point of view. There is only one master APPLY record, with links to all the CADs. The fields implemented
as EPICS channels are VAL, CLID, DIR, MESS and OMSS.

The internal logic is as similar as possible to the one specified in \ref gemapply. Specifically, when a write is
detected in the DIR channel:
\li if directive is START, increase the value of the CLID channel.
\li set the associated CAR record to BUSY.
\li ignore any MARK directives
\li if directive is START, process a PRESET first
\li for every CAD, set the DIR and ICID channels, and wait for the return value in the CAD's VAL channel.
\li if the return value != 0, write 0 in the APPLY's VAL, and set the error message, else, write CLID in VAL.
\li if all CAR records are IDLE, put the master CAR to IDLE. If one of them is in ERROR, put the master CAR in ERROR.
\li if the master CAR stays BUSY, it will go to IDLE as soon as all CAR records go to IDLE.

\subsection cad_sec GIAPI CAD Record
The CAD record described in \ref gemcad has been simplified to the minimum required by the Gemini OCS  from a
functional point of view. The fields implemented are VAL, ICID, DIR, MESS and OMSS, basically the same as the APPLY
record, except the client ID field has another name.

The internal logic has been implemented as close as possible to the one specified in \ref gemcad. The Associated CAR
record only goes to BUSY when a command(PRESET, CANCEL, START or PRESET_START) is sent to the instrument.

\subsection car_sec GIAPI CAR Record
The CAR record described in \ref gemcar has been simplified to the minimum required by the Gemini OCS from a
functional point of view. There is one CAR per CAD record, ane one master CAR record linked to the APPLY record.
The fields implemented
as EPICS channels are VAL, OMSS, OERR and CLID. The GIAPI CAR record has no internal logic, it is controlled by the CAD
and APPLY records.
Whether the master CAR record is IDLE or BUSY, it will contain the client ID of the last processed APPLY.
*/

