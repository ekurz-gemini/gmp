<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>edu.gemini.aspen</groupId>
        <artifactId>giapi-osgi</artifactId>
        <version>1.2.0-SNAPSHOT</version>
    </parent>

    <artifactId>distribution</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <packaging>pom</packaging>

    <name>Distribution</name>

    <properties>
        <noUpload>false</noUpload>
        <installationroot>/gemsoft/opt/gpi</installationroot>
    </properties>

    <dependencies>
        <dependency>
            <groupId>edu.gemini.aspen</groupId>
            <artifactId>giapi-osgi</artifactId>
            <version>1.2.0-SNAPSHOT</version>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>edu.gemini.aspen.gds.web.ui</groupId>
            <artifactId>gds-web-ui-logs</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Export maven properties -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>1.0-alpha-2</version>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>write-project-properties</goal>
                        </goals>
                        <configuration>
                            <outputFile>
                                ${project.build.outputDirectory}/config.properties
                            </outputFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Get a build number -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>1.0</version>
                <executions>
                    <execution>
                        <id>site-buildnumber</id>
                        <phase>pre-site</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>deploy-buildnumber</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <useLastCommittedRevision>true</useLastCommittedRevision>
                    <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
                </configuration>
            </plugin>
            <!-- Create an assembly -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>distro-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>

                            <finalName>${project.parent.name}-${project.parent.version}</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                            <tarLongFileMode>gnu</tarLongFileMode>
                            <attach>false</attach>
                            <descriptors>
                                <descriptor>src/main/assembly/assembly.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Create an RPM -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>rpm-maven-plugin</artifactId>
                <version>2.1-alpha-1</version>
                <executions>
                    <execution>
                        <phase>deploy</phase>
                        <goals>
                            <goal>rpm</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <name>${project.parent.artifactId}</name>
                    <group>Gemini</group>
                    <mappings>
                        <plugin>
                            <artifactId>maven-assembly-plugin</artifactId>
                            <version>2.2</version>
                            <configuration>
                                <finalName>${project.artifactId}-${project.version}</finalName>
                                <descriptors>
                                    <descriptor>../src/main/assembly/assembly.xml</descriptor>
                                </descriptors>
                                <appendAssemblyId>false</appendAssemblyId>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>make-assembly</id>
                                    <phase>deploy</phase>
                                    <goals>
                                        <goal>single</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                        <!--jars-->
                        <mapping>
                            <directory>${installationroot}/${project.artifactId}-${project.version}/bundles</directory>
                            <sources>
                                <source>
                                    <location>target/archive-tmp/bundles/</location>
                                    <targetArchitecture>noarch</targetArchitecture>
                                </source>
                            </sources>
                            <directoryIncluded>false</directoryIncluded>
                            <filemode>644</filemode>
                            <username>software</username>
                            <groupname>gemini</groupname>
                        </mapping>
                        <!-- gmp-server bundle-->
                        <!--readme-->
                        <!--mapping>
                            <directory>/gemsoft/opt/gpi/${project.artifactId}-${project.version}/</directory>
                            <sources>
                                <source>
                                    <location>target/site/doxygen/README</location>
                                </source>
                            </sources>
                            <directoryIncluded>false</directoryIncluded>
                            <filemode>644</filemode>
                            <username>software</username>
                            <groupname>gemini</groupname>
                        </mapping-->

                        <!--config files-->
                        <mapping>
                            <sources>
                                <source>
                                    <location>${project.build.directory}/${project.parent.artifactId}-${project.version}/${project.parent.artifactId}-${project.version}/conf</location>
                                </source>
                            </sources>
                            <directory>${installationroot}/${project.parent.artifactId}-${project.version}/conf</directory>
                            <configuration>true</configuration>
                            <directoryIncluded>false</directoryIncluded>
                            <filemode>644</filemode>
                            <username>software</username>
                            <groupname>gemini</groupname>
                        </mapping>
                        <!--executables-->
                        <mapping>
                            <sources>
                                <source>
                                    <location>${project.build.directory}/${project.parent.artifactId}-${project.version}/${project.parent.artifactId}-${project.version}/bin/${project.parent.artifactId}</location>
                                </source>
                            </sources>
                            <directory>${installationroot}/${project.parent.artifactId}-${project.version}/bin</directory>
                            <directoryIncluded>false</directoryIncluded>
                            <filemode>755</filemode>
                            <username>software</username>
                            <groupname>gemini</groupname>
                        </mapping>
                        <mapping>
                            <sources>
                                <source>
                                    <location>${project.build.directory}/${project.parent.artifactId}-${project.version}/${project.parent.artifactId}-${project.version}/bin/</location>
                                    <excludes>
                                        <exclude>${project.parent.artifactId}</exclude>
                                    </excludes>
                                </source>
                            </sources>
                            <directory>${installationroot}/${project.parent.artifactId}-${project.version}/bin</directory>
                            <directoryIncluded>false</directoryIncluded>
                            <filemode>644</filemode>
                            <username>software</username>
                            <groupname>gemini</groupname>
                        </mapping>
                    </mappings>
                    <needarch>false</needarch>
                    <targetOS>linux</targetOS>
                    <targetVendor>redhat</targetVendor>
                    <requires>
                        <require>java &gt;= 1.6.0</require>
                    </requires>
                    <release>${buildNumber}</release>
                    <preinstallScriptlet>
                        <script>
                            #check for user, or create it?
                            id -u software &amp;&gt; /dev/null || useradd software -u 3624 -g gemini -m &amp;&gt; /dev/null || (groupadd -g 2000 gemini &amp;&gt; /dev/null &amp;&amp; useradd software -g gemini -m &amp;&gt; /dev/null) || echo "Problem: could not create user software"
                        </script>
                    </preinstallScriptlet>
                    <postinstallScriptlet>
                        <script>
                            #create logs/ directory
                            mkdir -p ${installationroot}/${project.parent.artifactId}-${project.parent.version}/logs

                            #change user/group for all files(particularly directories)
                            chown -R software.gemini ${installationroot}/${project.parent.artifactId}-${project.parent.version}/

                            #symlink /gemsoft/opt/gpi/gmp -&gt; /gemsoft/opt/gpi/gmp-server-$VERSION
                            if [ $1 -ne 1 ]; then
                            rm -f ${installationroot}/${project.parent.artifactId}
                            fi
                            ln -s ${installationroot}/${project.parent.artifactId}-${project.version}/ ${installationroot}/${project.parent.artifactId}

                            #symlink /gemsoft/opt/bin -&gt; /gemsoft/opt/gpi/gpiaocdisplay-$VERSION/bin/gpiaocdisplay
                            ln -s ${installationroot}/${project.parent.artifactId}-${project.version}/bin/${project.parent.artifactId} /gemsoft/bin/${project.parent.artifactId}

                        </script>
                    </postinstallScriptlet>
                    <postremoveScriptlet>
                        <script>
                            #delete leftover directories
                            if [ $1 -eq 0 ]; then
                            rm -rf ${installationroot}/${project.parent.artifactId}-${project.version}
                            rm ${installationroot}/${project.parent.artifactId}
                            rm /gemsoft/bin/${project.parent.artifactId}
                            fi
                        </script>
                    </postremoveScriptlet>
                </configuration>
            </plugin>

            <!-- Upload tar.gz and RPM -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>wagon-maven-plugin</artifactId>
                <version>1.0-beta-3</version>
                <executions>
                    <execution>
                        <id>upload-tar</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>upload-single</goal>
                        </goals>
                        <configuration>
                            <serverId>sbfgpidev</serverId>
                            <fromFile>${project.build.directory}/${project.parent.name}-${project.parent.version}.tar.gz</fromFile>
                            <url>scp://sbfgpidev1.cl.gemini.edu/export/home/software/gpi/webcontent/gpi/${project.parent.name}</url>
                            <skip>${noUpload}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>upload-rpm</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>upload-single</goal>
                        </goals>
                        <configuration>
                            <serverId>sbfgpidev</serverId>
                            <fromFile>${project.build.directory}/rpm/${project.parent.name}/RPMS/i386/${project.parent.name}-${rpmversion}-${buildNumber}.i386.rpm</fromFile>
                            <url>scp://sbfgpidev1.cl.gemini.edu/export/home/software/gpi/webcontent/gpi/${project.parent.name}</url>
                            <skip>${noUpload}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh</artifactId>
                <version>1.0-beta-6</version>
            </extension>
        </extensions>
    </build>

    <profiles>
        <profile>
            <id>production</id>
            <dependencies>
                <!-- Felix core -->
                <!--dependency>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>org.apache.felix.framework</artifactId>
                    <version>${felix.framework.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>org.apache.felix.main</artifactId>
                    <version>${felix.framework.version}</version>
                </dependency-->
                <!-- PAX Runner -->
                <dependency>
                    <groupId>org.ops4j.pax.runner</groupId>
                    <artifactId>pax-runner</artifactId>
                    <version>${pax-runner.version}</version>
                </dependency>
                <!-- GIAPI tester -->
                <!--dependency>
                    <groupId>edu.gemini.aspen</groupId>
                    <artifactId>giapi-tester</artifactId>
                    <version>0.1.0</version>
                    <classifier>jar-with-dependencies</classifier>
                </dependency-->
                <!-- Felix Shell and GOGO -->
                <!--dependency>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>org.apache.felix.gogo.command</artifactId>
                    <version>0.8.0</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>org.apache.felix.gogo.runtime</artifactId>
                    <version>0.8.0</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>org.apache.felix.gogo.shell</artifactId>
                    <version>0.8.0</version>
                </dependency-->
            </dependencies>
        </profile>
    </profiles>
</project>
