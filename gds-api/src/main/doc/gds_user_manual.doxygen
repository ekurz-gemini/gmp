/*! \page gds_user_manual GDS User Manual

This page describes how to use and manage the Gemini Data Service.

This manual contains the following sections:
- \ref introduction
- \ref sources
- \ref gds_configuration_sec
- \ref gds_web_ui_sec
- \ref gds_troubleshooting_sec

\section introduction Introduction
GDS stands for GIAPI Data Service and is one of the components on GIAPI's overall design. 
In the past instruments would use the DHS to contribute data that would compose the final
FITS file. Different sources will send their contributions to the DHS, which would compose
it into the final file

In GIAPI, a different approach is taken, where the instrument writes the FITS file with a 
minimal set of keywords and GIAPI's component GDS takes cares of "completing" the file by
requesting keywords to different data sources.

The instrument and the GDS are decoupled by means of events that the instrument TLC fires
in sequence, and that GDS can listen for. As the instrument does not need to wait for the events
to complete, if GDS fails, it will not interfere with the rest of the instrument's operation.

\subsection ObservationEvents
The interaction between the instrument and GDS is defined by a series
of events, that must be fired in order while performing an observation as described in the GIAPI
Design and Use Document. 

The events are listed below:
<table>
    <tr>
        <th>Event Time</th>
        <th>GIAPI Observation Event</th>
        <th>Used in GDS</th>
    </tr>
    <tr>
        <td>T1</td>
	<td>OBS_PREP</td>
        <td>Depends on configuration</td>
    </tr>
    <tr>
        <td>T2</td>
        <td>OBS_START_ACQ</td>
        <td>Depends on configuration</td>
    </tr>
    <tr>
        <td>T3</td>
        <td>OBS_END_ACQ</td>
        <td>Depends on configuration</td>
    </tr>
    <tr>
        <td>T4</td>
        <td>OBS_START_READOUT</td>
        <td>Depends on configuration</td>
    </tr>
    <tr>
        <td>T5</td>
        <td>OBS_END_READOUT</td>
        <td>Depends on configuration</td>
    </tr>
    <tr>
        <td>T6</td>
        <td>OBS_START_DSET_WRITE</td>
        <td>Depends on configuration</td>
    </tr>
    <tr>
        <td>T7</td>
        <td>OBS_END_DSET_WRITE</td>
        <td>Yes</td>
    </tr>
</table>

The observation process is nevertheless driven by Seqexec which sends the command
to the instrument, first querying the DHS for the next available data label.
Seqexec also needs to send to GDS whatever keywords it needs to be included in the FITS file.

The whole sequence of steps for an observation is listep below:
- An observation is triggered on Seqexec, e.g. by a manual command of the user
- Seqexec gets a new data label from the DHS
- Seqexec sends to the GDS a mapping between the data label and the program id being observed
- Seqexec sends a list of keywords for that data label to GDS
- Seqexec sends and observation sequence command to the Instrument
- The instrument starts the observation and sends observation events along the way
- GDS reacts to those events gathering data from the predefined data sources according to the configuration
- The instrument writes the basic FITS file and sends the last observation event
- GDS reviews the collected data and writes the extended keywords onto the FITS file

The following picture describes the process of events and data gathering

\image html gds-sequence.jpg

\section sources Sources
GDS is designed to support different data sources from where data can be gathered. The data is used to complete
the keywords placed in the final FITS files.

As of version 0.13.0 the following sources are supported

<table>
    <tr>
        <th>Source</th>
        <th>Description</th>
    </tr>
    <tr>
        <td>EPICS</td>
        <td>Can read epics channels at the moment of the observation event. It supports INT, STRING and DOUBLE channels and can extract a specific array entry</td>
    </tr>
    <tr>
        <td>SEQEXEC</td>
        <td>Reads values provided by Seqexec through the GDS XMLRPC interface</td>
    </tr>
    <tr>
        <td>ODB</td>
        <td>Can connect to the ODB and retrieve program's data, like PI's name, etc</td>
    </tr>
    <tr>
        <td>STATUS</td>
        <td>It reads the last status value posted by the instrument</td>
    </tr>
    <tr>
        <td>CONSTANT</td>
        <td>It will insert a fixed value in a given FITS keyword</td>
    </tr>
    <tr>
        <td>INSTRUMENT</td>
        <td>This is not a keyword source but it behaves very similarly. It will verify that the instrument has included a required keyword</td>
    </tr>
</table>

The names of the sources are used in the Configuration file as shown in the next section

\section gds_configuration_sec Configuration
  The GDS is configured using the file $GMP_HOME/conf/gds-keywords.conf

  \attention Though the GDS configuration can be edited by hand, you can also use the Web Configuration GUI.

 The configuration file looks like this:

 \verbatim
 #
 #   Instrument    Event         Keyword Name      FITS      Data       Gemini           Null      Source          Source                    Array     Comment
 #     Name                        in FITS         Header    Type       Mandatory        Value                     channel                   Index
 #  -----------  -------------  ---------------   -------   -------   ---------------   -------   -----------   -------------------------   -------   -----------------
 #
    GPI          OBS_END_ACQ      AIRMASS          0        DOUBLE          F            NONE        EPICS       ws:massAirmass              NULL     "Mean airmass for the observation"
 ...
 \endverbatim

 Where each row defines a keyword. The meaning of each of the columns is given in the table below

 <table>
    <tr>
 	<th>Column Title</th>
 	<th>Column Description</th>
        <th>Possible Values</th>
    </tr>
    <tr>
 	<td>Instrument Name</td>
 	<td>Instrument for which this confguration is valid</td>
 	<td>GPI</td>
    </tr>
    <tr>
 	<td>Event</td>
 	<td>Observation event that triggers the collection of the keyword's value</td>
 	<td>OBS_PREP, OBS_START_ACQ, OBS_END_ACQ, OBS_START_READOUT, OBS_END_READOUT, OBS_START_DSET_WRITE, OBS_END_DSET_WRITE</td>
    </tr>
    <tr>
 	<td>Keyword Name in FITS</td>
 	<td>Keyword name as it will appear in the FITS file</td>
 	<td>Any alphanumeric string of length <= 8</td>
    </tr>
    <tr>
 	<td>FITS Header</td>
 	<td>In which header should this value be: primary(0) or an extension(1, 2, 3, ...)</td>
 	<td>0, 1, 2...</td>
    </tr>
    <tr>
 	<td>Data Type</td>
 	<td>FITS data type</td>
 	<td>DOUBLE, INT, STRING</td>
    </tr>
    <tr>
 	<td>Gemini Mandatory</td>
 	<td>Is this a mandatory keyword?</td>
 	<td>T, F</td>
    </tr>
    <tr>
 	<td>Null Value</td>
 	<td>Value to write in case the actual value can't be retrieved</td>
 	<td>Any alphanumeric string</td>
    </tr>
    <tr>
 	<td>Source</td>
 	<td>Which subsytem provides this value</td>
 	<td>EPICS, STATUS, SEQEXEC, ODB</td>
    </tr>
    <tr>
 	<td>Source Channel</td>
 	<td>Name of the channel in the subsystem, where the keyword value can be retrieved (ex. An EPICs channel, a StatusItem name, etc...)</td>
 	<td>Depends on the type of the source</td>
    </tr>
    <tr>
 	<td>Array Index</td>
 	<td>If the channel is an array, which element to retrieve. Put 0 if channel is not an array.</td>
 	<td>0, 1, 2...</td>
    </tr>
    <tr>
 	<td>Comment</td>
 	<td>Comment accompanying the keyword in the FITS file</td>
 	<td>Any alphanumeric string in quotes</td>
    </tr>
 </table>

\section gds_web_ui_sec GDS Web UI
To view the status of the GDS or change the configuration you can use the GDS web interface
at the address http://\<gdshostname\>:8888/gds

The Web UI includes a header and a footer with generic information and several tabs that
will be discussed below

\subsection gds_web_ui_status Status
This tab will show the current status of GDS as well as the result of the last 10 observations.
The following image shows how the status page looks like

\image html gds_web_ui_status.png

\subsection gds_web_ui_logs Logs
This is a view of the last logs sorted by time. ERRORS and WARNINGS are highlighted

\image html gds_web_ui_logs.png

\subsection gds_web_ui_keywords Keyword Configuration
This tabs allows to view and edit the configuration file as in \ref gds_configuration_sec 

\image html gds_web_ui_keyword_configuration.png

In edit mode the fields become controls to change the keyword configuration. There are also add and delete buttons
To edit the configuration you need to be logged in using the Login button on the top right corner

\image html gds_web_ui_keyword_configuration_edit.png

\subsection gds_web_ui_configuration System Configuration

This tab allows to edit the configuration of properties that affect the GDS. These include:
<table>
    <tr>
        <th>Property</th>
        <th>Description</th>
    </tr>
    <tr>
        <td>GMP_HOSTNAME</td>
        <td>Name of the host where gmp is running</td>
    </tr>
    <tr>
        <td>DHS_ANCILLIARY_DATA_PATH</td>
        <td>File path for the ancilliary files</td>
    </tr>
    <tr>
        <td>DHS_SCIENCE_PATH</td>
        <td>File path where the instrument will store the files acquired during an observation</td>
    </tr>
    <tr>
        <td>DHS_PERMANENT_SCIENCE_PATH</td>
        <td>Path where GDS writes processed final files</td>
    </tr>
    <tr>
        <td>DHS_INTERMEDIATE_DATA_PATH</td>
        <td>Path where intermedatie files can be stored</td>
    </tr>
</table>

\image html gds_web_ui_system_configuration.png
\subsection gds_web_ui_help Help
Self-hosted help

\image html gds_web_ui_help.png

\section gds_troubleshooting_sec Troubleshooting

\subsection gds_web_ui_troubleshooting GDS Web UI
- Got a session expiration error like:
\image html gds_web_ui_session_expired.png

That only means that the browser window was inactive for too long. Just refresh the page
*/
