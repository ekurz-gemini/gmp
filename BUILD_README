--------------------------------------------------------------------------------
GIAPI OSGi Component. Build instructions
--------------------------------------------------------------------------------

These are the detailed instruction to allow building the entire OSGi framework
that provides support to the deployment of the Gemini Master Process (GMP) in
the Top Level Computer.

The components these instructions deal with are two:

1. Setting up an Oscar Bundle Repository (OBR) to serve as the software
   repository for the GMP.

2. Install the Gemini Master Process from the Bundle Repository. This allows
   the application to be updated and configured using the OSGi framework


1. Building the OSGi components.
--------------------------------------------------------------------------------

From the giapi-osgi directory, simply type

   ant

on the command line. That should build the entire tree and provide all the tools
we need to set up our bundle repository.

Once it is finished, you will get the 'launcher' application  and all the
necessary bundles that will be used to form the OBR server and the GMP service.
We will explain how to use all these in the next sections

2. Bootstrapping the Bundle Server
--------------------------------------------------------------------------------

The Bundle Server is itself a deployable application, but getting it to serve
itself up is a bit of a chicken-and-egg problem. Here is how to set it up.
I find that it's easiest to set up an alias for launcher that points to your
development tree:

  alias launcher='java -jar ~/Projects/giapi-osgi/runtime/launcher/launcher.jar
                 -S:/home/anunez/osgiApps'

The -S argument is useful to specify where do we want to have our OSGi
applications installed. If it's not specified, they will be installed in the
~/.osgi directory. The directory needs to be created manually.

Now, fetch the bundle-server from another machine and give it an alias.

  launcher -h:build.cl.gemini.edu -i:bundle-server -a:temp

Set the bundle property to point to your local repository development root, and
then start up the app. You can do that by editing the file bundle.properties under
the folder ~/.osgi/temp/conf/build.properties and change the property 

  edu.gemini.util.obr.root=/home/anunez/Projects/giapi-osgi

And then launch it

  launcher -a:temp

If you type ps -l you will see that everything is running but it's pointed to
the other machine.

In another window, install the app again, this time from your own running
server. You also need to set the root property as before in the bundle.properties
file

  launcher -i:bundle-server

And like before the set the edu.gemini.util.obr.root property this time in the 
bundle-server configuration at ~/.osgi/bundle-server/conf/build.properties

  launcher -a:bundle-server

Start up the server so it will download all its bundles. You will get a bind
exception because the port is already bound in the other instance . This is ok.

  launcher -a:bundle-server

Shut down both servers now, by typing shutdown at both -> prompts.

Uninstall the temp version, and start up the new one.

  launcher -a:temp -u
  launcher -a:bundle-server

If you do a ps -l you will see that it's pointed at itself now. Note that this
means you can't update the OBR Service itself. If this is going to be a problem,
you can fix this by pointing it at the filesystem location rather than the HTTP
location, then turning auto-start down to level 3.

  -> uninstall <number for OBR Service>
  -> install file:/Users/rnorris/Projects/osgi/bundle/util/obr-server/obr-server.jar
  -> start <number for new OBR Service>
  -> shutdown

  launcher -a:bundle-server -L:3
  launcher -a:bundle-server

If you do ps -l now, everything should look correct.

You should now be able to hit your dev repository from any instance of Oscar as
follows:

  -> obr urls http://localhost:9999/bundle
  -> obr list


3. Installing the Gemini Master Process service from the OBR server
--------------------------------------------------------------------------------

Now that you have an OBR server running, you can deploy a Gemini Master process
from it on the Top Level Computer.

To do so, you first need to install the 'launcher' application on the TLC. Just
copy the 'launcher.jar' file to the TLC, and make an alias for it as we did
for the bundle server. If you are installing the GMP on the same machine as
the OBR, then you are all set.

Now, to install the GMP, just type:

  launcher -h:<host> -i:gmp-server

where <host> should be replaced with the host machine that is running the OBR.
If the OBR server is running on the same machine where the GMP is going to be
installed, you can omit the -h:<host> part.

Now, the GMP is installed. In your OSGi install directory (the one you
specified with the -S argument to launcher or ~/.osgi if you didn't use -S),
you will find a gmp-server directory. This directory contains the configuration
files for GMP, the log files produced by GMP (if configured) and the actual
bundles that form the GMP application.

The first time the Gemini Master Process is executed is going to
download all the necesary bundles from the OBR repository and will start up
the application.

To start up the GMP, just type:

  launcher -a:gmp-server

If everything goes well, the GMP will start and you should see a bunch of
messages on the screen, like:

Welcome to Oscar.
=================

-> 14:45:59.096 EVENT  Starting Jetty/4.2.x
14:45:59.138 EVENT  Started SocketListener on 0.0.0.0:9091
14:45:59.139 EVENT  Started org.mortbay.http.HttpServer@96b5c2
[...]
INFO: Adding GMP Service
Jul 25, 2008 2:45:59 PM edu.gemini.aspen.gmp.servlet.osgi.HttpTracker
registerServlet
INFO: Registering servlet
14:45:59.726 EVENT  Started ServletHttpContext[/]

Congratulations! You have sucessfully deployed the Gemini Master Process
from your bundle repository server. Please see the README_QUICK_START, section
3 and 4 to get information about how to shutdown and use the GMP once it has
started






