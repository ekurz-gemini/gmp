<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <parent>
        <relativePath>../poms/scala/</relativePath>
        <groupId>edu.gemini.aspen.giapi-osgi.build</groupId>
        <artifactId>scala-compiled-bundle-settings</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <properties>
        <bundle.symbolicName>edu.gemini.aspen.gpi.web.ui.aoplot</bundle.symbolicName>
        <bundle.namespace>edu.gemini.aspen.gpi.web.ui.aoplot</bundle.namespace>
        <gwt.version>2.3.0</gwt.version>
        <gwt.plugin.version>2.3.0-1</gwt.plugin.version>
    </properties>

    <modelVersion>4.0.0</modelVersion>
    <groupId>edu.gemini.aspen.gpi.web.ui</groupId>
    <artifactId>gpi-ao-plot</artifactId>
    <version>0.1.0-SNAPSHOT</version>

    <name>GPI AO Metrics Plot</name>
    <description>GPI AO Metrics Plot</description>

    <packaging>bundle</packaging>

    <build>
        <plugins>
            <!-- Compiles your custom GWT components with the GWT compiler -->
            <!-- A hosted mode browser for client-side widget debugging can be run
                   with the goal gwt:run after uncommenting the correct line below. A remote
                   debugger can then be connected to port 8998. Note that e.g. a Jetty server
                   should be running with the server side parts - use the goal jetty:run . -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>gwt-maven-plugin</artifactId>
                <version>${gwt.plugin.version}</version>
                <configuration>
                    <!-- if you don't specify any modules, the plugin will find them -->
                    <!-- <modules> <module>com.vaadin.demo.mobilemail.gwt.ColorPickerWidgetSet</module>
                             </modules> -->
                    <!-- <webappDirectory>${project.build.directory}/${project.build.finalName}/VAADIN/widgetsets</webappDirectory> -->
                    <!-- On Mac running Snow Leopard, add "-d32" -->
                    <!-- This causes error messages (but build works) in phase "package":
                             two processes would use the same debug port -->
                    <!--extraJvmArgs>-Xmx512M -Xss1024k -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8998</extraJvmArgs -->
                    <extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
                    <!-- <runTarget>mobilemail</runTarget> -->
                    <!-- We are doing "inplace" but into subdir VAADIN/widgetsets. This way compatible with Vaadin eclipse plugin. -->
                    <webappDirectory>${basedir}/src/main/resources/VAADIN/widgetsets</webappDirectory>
                    <hostedWebapp>${basedir}/src/main/resources/VAADIN/widgetsets</hostedWebapp>
                    <noServer>true</noServer>
                    <runTarget>http://localhost:8080/mobilemail</runTarget>
                    <!-- Remove draftCompile when project is ready -->
                    <draftCompile>false</draftCompile>
                    <style>OBF</style>
                    <!-- <force>true</force> -->
                    <compileReport>false</compileReport>
                </configuration>
                <!--executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions-->
                <dependencies>
                    <dependency>
                        <groupId>com.google.gwt</groupId>
                        <artifactId>gwt-dev</artifactId>
                        <version>${gwt.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>com.google.gwt</groupId>
                        <artifactId>gwt-user</artifactId>
                        <version>${gwt.version}</version>
                    </dependency>
                </dependencies>
            </plugin>


            <!-- As we are doing "inplace" GWT compilation, ensure the widgetset -->
            <!-- directory is cleaned properly -->
            <!--plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.4.1</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>src/main/resources/VAADIN/widgetsets</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin-->

            <plugin>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-maven-plugin</artifactId>
                <version>1.0.2</version>
                <executions>
                    <execution>
                        <configuration>
                            <!-- if you don't specify any modules, the plugin will find them -->
                            <modules>
                                <module>edu.gemini.aspen.gpi.web.ui.aoplot.GPIAOPlot</module>
                            </modules>

                        </configuration>
                        <goals>
                            <goal>update-widgetset</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>edu.gemini.aspen.gds</groupId>
            <artifactId>gds-api</artifactId>
        </dependency>
        <dependency>
            <groupId>edu.gemini.epics</groupId>
            <artifactId>epics-service</artifactId>
            <version>0.8.0</version>
        </dependency>
        <dependency>
            <groupId>edu.gemini.aspen.gmp</groupId>
            <artifactId>gmp-epics-access</artifactId>
            <version>0.2.0</version>
        </dependency>
        <dependency>
            <groupId>edu.gemini.external.osgi.org.vaadin.addons</groupId>
            <artifactId>invient-charts</artifactId>
            <version>0.8.5</version>
        </dependency>
        <dependency>
            <groupId>edu.gemini.external.osgi.org.vaadin</groupId>
            <artifactId>dontpush-addon-ozonelayer</artifactId>
            <version>0.3.5</version>
        </dependency>
        <dependency>
            <groupId>edu.gemini.external.osgi.org.atmosphere</groupId>
            <artifactId>atmosphere-gwt-client</artifactId>
            <version>0.7.2</version>
        </dependency>
        <dependency>
            <groupId>edu.gemini.external.osgi.org.atmosphere</groupId>
            <artifactId>atmosphere-gwt-common</artifactId>
            <version>0.7.2</version>
        </dependency>
        <dependency>
            <groupId>edu.gemini.external.osgi.org.atmosphere</groupId>
            <artifactId>atmosphere-runtime</artifactId>
            <version>0.7.2</version>
        </dependency>
        <dependency>
            <groupId>org.atmosphere</groupId>
            <artifactId>atmosphere-compat-weblogic</artifactId>
            <version>0.7.2</version>
        </dependency>
        <dependency>
            <groupId>org.atmosphere</groupId>
            <artifactId>atmosphere-compat-tomcat</artifactId>
            <version>0.7.2</version>
        </dependency>
        <dependency>
            <groupId>org.atmosphere</groupId>
            <artifactId>atmosphere-compat-jbossweb</artifactId>
            <version>0.7.2</version>
        </dependency>

        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin</artifactId>
        </dependency>
    </dependencies>

</project>